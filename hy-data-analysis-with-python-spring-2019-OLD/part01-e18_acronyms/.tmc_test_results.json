[{"name": "test.test_acronyms.Acronyms.test_empty", "status": "failed", "message": "src.acronyms.acronyms does not exist!", "passed": false, "points": ["p01-18.1"], "backtrace": ["  File \"/home/miska/anaconda3/lib/python3.7/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/home/miska/anaconda3/lib/python3.7/unittest/case.py\", line 628, in run\n    testMethod()\n", "  File \"/home/miska/Documents/Courses/Data Analysis with Python/hy-data-analysis-with-python-spring-2019/part01-e18_acronyms/test/test_acronyms.py\", line 22, in test_empty\n    result = acronyms(\"\")\n", "  File \"/home/miska/Documents/Courses/Data Analysis with Python/hy-data-analysis-with-python-spring-2019/part01-e18_acronyms/tmc/utils.py\", line 10, in fail\n    raise AssertionError(err)\n"]}, {"name": "test.test_acronyms.Acronyms.test_first", "status": "failed", "message": "src.acronyms.acronyms does not exist!", "passed": false, "points": ["p01-18.1"], "backtrace": ["  File \"/home/miska/anaconda3/lib/python3.7/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/home/miska/anaconda3/lib/python3.7/unittest/case.py\", line 628, in run\n    testMethod()\n", "  File \"/home/miska/Documents/Courses/Data Analysis with Python/hy-data-analysis-with-python-spring-2019/part01-e18_acronyms/test/test_acronyms.py\", line 18, in test_first\n    result = acronyms(\"\"\"For the purposes of the EU General Data Protection Regulation (GDPR), the controller of your personal information is International Business Machines Corporation (IBM Corp.), 1 New Orchard Road, Armonk, New York, United States, unless indicated otherwise. Where IBM Corp. or a subsidiary it controls (not established in the European Economic Area (EEA)) is required to appoint a legal representative in the EEA, the representative for all such cases is IBM United Kingdom Limited, PO Box 41, North Harbour, Portsmouth, Hampshire, United Kingdom PO6 3AU.\"\"\")\n", "  File \"/home/miska/Documents/Courses/Data Analysis with Python/hy-data-analysis-with-python-spring-2019/part01-e18_acronyms/tmc/utils.py\", line 10, in fail\n    raise AssertionError(err)\n"]}]